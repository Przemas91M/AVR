
SygnalizacjaSwietlna.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000002d0  00000364  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800062  00800062  00000366  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000366  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000075  00000000  00000000  00000386  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000102  00000000  00000000  000003fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000006e  00000000  00000000  000004fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000252  00000000  00000000  0000056b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  000007c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000d8  00000000  00000000  000007f0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ed       	ldi	r30, 0xD0	; 208
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#define LED4 PA3//zielone dla pieszych
int main(void)
{
//unsigned int sekundnik = 0;
//inicjalizacja portów wyjsciowych
DDRA |=(1<<LED1)|(1<<LED2)|(1<<LED3)|(1<<LED4);
  92:	8a b3       	in	r24, 0x1a	; 26
  94:	8f 60       	ori	r24, 0x0F	; 15
  96:	8a bb       	out	0x1a, r24	; 26
//ustawienie pinu jako wejsciowego
DDRC &= ~(1<<PC0);
  98:	a0 98       	cbi	0x14, 0	; 20
//podlaczenie rezystora pullup
PORTA |= (1<<PC0);
  9a:	d8 9a       	sbi	0x1b, 0	; 27
//ustawienie stanu wysokiego na portach
PORTA |= (1<<LED1)|(1<<LED2)|(1<<LED3)|(1<<LED4);
  9c:	8b b3       	in	r24, 0x1b	; 27
  9e:	8f 60       	ori	r24, 0x0F	; 15
  a0:	8b bb       	out	0x1b, r24	; 27
TCNT1 = 65535;
  a2:	8f ef       	ldi	r24, 0xFF	; 255
  a4:	9f ef       	ldi	r25, 0xFF	; 255
  a6:	9d bd       	out	0x2d, r25	; 45
  a8:	8c bd       	out	0x2c, r24	; 44
// Ustawienie timera z przeskalerem 1024
//1s=15625 cykli
TCCR1B |= ((1<<CS10)|(1<<CS12));
  aa:	8e b5       	in	r24, 0x2e	; 46
  ac:	85 60       	ori	r24, 0x05	; 5
  ae:	8e bd       	out	0x2e, r24	; 46
//odblokowanie przerwañ od przepe³nienia
TIMSK |= (1<<TOIE1);
  b0:	89 b7       	in	r24, 0x39	; 57
  b2:	84 60       	ori	r24, 0x04	; 4
  b4:	89 bf       	out	0x39, r24	; 57
//odblokowanie przerwania
sei();
  b6:	78 94       	sei
	{
		//przycisk wcisniety od razu(natychmiast)
		if(!(PINC & (1<<PC0)) && przycisniety == 0)
		{
			flaga = 0;
			TCNT1=65535;
  b8:	ef ef       	ldi	r30, 0xFF	; 255
  ba:	ff ef       	ldi	r31, 0xFF	; 255
			przycisniety = 1;
  bc:	21 e0       	ldi	r18, 0x01	; 1
  be:	30 e0       	ldi	r19, 0x00	; 0
			drugi = 0;	
		}
		//sekwencja skonczona, nie bylo drugiego wcisniecia
		else if(przycisniety == 2 && skonczony == 1 && drugi == 0)
		{
			flaga = 4;
  c0:	64 e0       	ldi	r22, 0x04	; 4
  c2:	70 e0       	ldi	r23, 0x00	; 0
			{
				counter++;
			}
			else
			{
				przycisniety = 2;
  c4:	42 e0       	ldi	r20, 0x02	; 2
  c6:	50 e0       	ldi	r21, 0x00	; 0
sei();
//petla glowna
while(1)
	{
		//przycisk wcisniety od razu(natychmiast)
		if(!(PINC & (1<<PC0)) && przycisniety == 0)
  c8:	98 99       	sbic	0x13, 0	; 19
  ca:	11 c0       	rjmp	.+34     	; 0xee <main+0x5c>
  cc:	80 91 62 00 	lds	r24, 0x0062
  d0:	90 91 63 00 	lds	r25, 0x0063
  d4:	89 2b       	or	r24, r25
  d6:	59 f4       	brne	.+22     	; 0xee <main+0x5c>
		{
			flaga = 0;
  d8:	10 92 61 00 	sts	0x0061, r1
  dc:	10 92 60 00 	sts	0x0060, r1
			TCNT1=65535;
  e0:	fd bd       	out	0x2d, r31	; 45
  e2:	ec bd       	out	0x2c, r30	; 44
			przycisniety = 1;
  e4:	30 93 63 00 	sts	0x0063, r19
  e8:	20 93 62 00 	sts	0x0062, r18
  ec:	ed cf       	rjmp	.-38     	; 0xc8 <main+0x36>
		}
		//obsluga drgan przycisku
		else if(!(PINC & (1<<PC0)) && przycisniety == 1)
  ee:	98 99       	sbic	0x13, 0	; 19
  f0:	20 c0       	rjmp	.+64     	; 0x132 <main+0xa0>
  f2:	80 91 62 00 	lds	r24, 0x0062
  f6:	90 91 63 00 	lds	r25, 0x0063
  fa:	01 97       	sbiw	r24, 0x01	; 1
  fc:	d1 f4       	brne	.+52     	; 0x132 <main+0xa0>
		{			
			if(counter < 100)
  fe:	80 91 68 00 	lds	r24, 0x0068
 102:	90 91 69 00 	lds	r25, 0x0069
 106:	84 36       	cpi	r24, 0x64	; 100
 108:	91 05       	cpc	r25, r1
 10a:	54 f4       	brge	.+20     	; 0x120 <main+0x8e>
			{
				counter++;
 10c:	80 91 68 00 	lds	r24, 0x0068
 110:	90 91 69 00 	lds	r25, 0x0069
 114:	01 96       	adiw	r24, 0x01	; 1
 116:	90 93 69 00 	sts	0x0069, r25
 11a:	80 93 68 00 	sts	0x0068, r24
 11e:	d4 cf       	rjmp	.-88     	; 0xc8 <main+0x36>
			}
			else
			{
				przycisniety = 2;
 120:	50 93 63 00 	sts	0x0063, r21
 124:	40 93 62 00 	sts	0x0062, r20
				counter = 0;
 128:	10 92 69 00 	sts	0x0069, r1
 12c:	10 92 68 00 	sts	0x0068, r1
 130:	cb cf       	rjmp	.-106    	; 0xc8 <main+0x36>
			}
		}
		else if//sekwencja juz dziala, drugi raz przycisk wcisniety
		(!(PINC & (1<<PC0)) && przycisniety == 2 && skonczony == 0)
 132:	98 99       	sbic	0x13, 0	; 19
 134:	11 c0       	rjmp	.+34     	; 0x158 <main+0xc6>
 136:	80 91 62 00 	lds	r24, 0x0062
 13a:	90 91 63 00 	lds	r25, 0x0063
 13e:	02 97       	sbiw	r24, 0x02	; 2
 140:	59 f4       	brne	.+22     	; 0x158 <main+0xc6>
 142:	80 91 64 00 	lds	r24, 0x0064
 146:	90 91 65 00 	lds	r25, 0x0065
 14a:	89 2b       	or	r24, r25
 14c:	29 f4       	brne	.+10     	; 0x158 <main+0xc6>
		{
			drugi = 1;	
 14e:	30 93 67 00 	sts	0x0067, r19
 152:	20 93 66 00 	sts	0x0066, r18
 156:	b8 cf       	rjmp	.-144    	; 0xc8 <main+0x36>
		}
		//sekwencja skonczona, oczekiwanie na ponowne uruchomienie sekwencji
		else if(przycisniety == 2 && skonczony == 1 && drugi == 1)
 158:	80 91 62 00 	lds	r24, 0x0062
 15c:	90 91 63 00 	lds	r25, 0x0063
 160:	02 97       	sbiw	r24, 0x02	; 2
 162:	f9 f4       	brne	.+62     	; 0x1a2 <main+0x110>
 164:	80 91 64 00 	lds	r24, 0x0064
 168:	90 91 65 00 	lds	r25, 0x0065
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	c9 f4       	brne	.+50     	; 0x1a2 <main+0x110>
 170:	80 91 66 00 	lds	r24, 0x0066
 174:	90 91 67 00 	lds	r25, 0x0067
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	99 f4       	brne	.+38     	; 0x1a2 <main+0x110>
		{
			flaga = 0;
 17c:	10 92 61 00 	sts	0x0061, r1
 180:	10 92 60 00 	sts	0x0060, r1
			TCNT1 = 0;
 184:	1d bc       	out	0x2d, r1	; 45
 186:	1c bc       	out	0x2c, r1	; 44
			przycisniety = 0;
 188:	10 92 63 00 	sts	0x0063, r1
 18c:	10 92 62 00 	sts	0x0062, r1
			skonczony = 0;
 190:	10 92 65 00 	sts	0x0065, r1
 194:	10 92 64 00 	sts	0x0064, r1
			drugi = 0;	
 198:	10 92 67 00 	sts	0x0067, r1
 19c:	10 92 66 00 	sts	0x0066, r1
 1a0:	93 cf       	rjmp	.-218    	; 0xc8 <main+0x36>
		}
		//sekwencja skonczona, nie bylo drugiego wcisniecia
		else if(przycisniety == 2 && skonczony == 1 && drugi == 0)
 1a2:	80 91 62 00 	lds	r24, 0x0062
 1a6:	90 91 63 00 	lds	r25, 0x0063
 1aa:	02 97       	sbiw	r24, 0x02	; 2
 1ac:	09 f0       	breq	.+2      	; 0x1b0 <main+0x11e>
 1ae:	8c cf       	rjmp	.-232    	; 0xc8 <main+0x36>
 1b0:	80 91 64 00 	lds	r24, 0x0064
 1b4:	90 91 65 00 	lds	r25, 0x0065
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	09 f0       	breq	.+2      	; 0x1be <main+0x12c>
 1bc:	85 cf       	rjmp	.-246    	; 0xc8 <main+0x36>
 1be:	80 91 66 00 	lds	r24, 0x0066
 1c2:	90 91 67 00 	lds	r25, 0x0067
 1c6:	89 2b       	or	r24, r25
 1c8:	09 f0       	breq	.+2      	; 0x1cc <main+0x13a>
 1ca:	7e cf       	rjmp	.-260    	; 0xc8 <main+0x36>
		{
			flaga = 4;
 1cc:	70 93 61 00 	sts	0x0061, r23
 1d0:	60 93 60 00 	sts	0x0060, r22
			TCNT1 = 0;
 1d4:	1d bc       	out	0x2d, r1	; 45
 1d6:	1c bc       	out	0x2c, r1	; 44
			skonczony = 0;
 1d8:	10 92 65 00 	sts	0x0065, r1
 1dc:	10 92 64 00 	sts	0x0064, r1
			przycisniety = 0;
 1e0:	10 92 63 00 	sts	0x0063, r1
 1e4:	10 92 62 00 	sts	0x0062, r1
 1e8:	6f cf       	rjmp	.-290    	; 0xc8 <main+0x36>

000001ea <__vector_9>:
	}

}
//obs³uga przerwania
ISR(TIMER1_OVF_vect)   
{
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	2f 93       	push	r18
 1f6:	3f 93       	push	r19
 1f8:	8f 93       	push	r24
 1fa:	9f 93       	push	r25
//uruchamiamy sekwencje
switch (flaga)
 1fc:	80 91 60 00 	lds	r24, 0x0060
 200:	90 91 61 00 	lds	r25, 0x0061
 204:	81 30       	cpi	r24, 0x01	; 1
 206:	91 05       	cpc	r25, r1
 208:	89 f0       	breq	.+34     	; 0x22c <__vector_9+0x42>
 20a:	82 30       	cpi	r24, 0x02	; 2
 20c:	91 05       	cpc	r25, r1
 20e:	1c f4       	brge	.+6      	; 0x216 <__vector_9+0x2c>
 210:	89 2b       	or	r24, r25
 212:	39 f0       	breq	.+14     	; 0x222 <__vector_9+0x38>
 214:	42 c0       	rjmp	.+132    	; 0x29a <__vector_9+0xb0>
 216:	82 30       	cpi	r24, 0x02	; 2
 218:	91 05       	cpc	r25, r1
 21a:	71 f0       	breq	.+28     	; 0x238 <__vector_9+0x4e>
 21c:	03 97       	sbiw	r24, 0x03	; 3
 21e:	e9 f5       	brne	.+122    	; 0x29a <__vector_9+0xb0>
 220:	2a c0       	rjmp	.+84     	; 0x276 <__vector_9+0x8c>
{
//pomaranczowe
case 0:
		PORTA |= (1<<LED3);
 222:	da 9a       	sbi	0x1b, 2	; 27
		PORTA &= ~(1<<LED2);
 224:	d9 98       	cbi	0x1b, 1	; 27
		TCNT1 = 18662;
 226:	86 ee       	ldi	r24, 0xE6	; 230
 228:	98 e4       	ldi	r25, 0x48	; 72
 22a:	2b c0       	rjmp	.+86     	; 0x282 <__vector_9+0x98>
		flaga++;
		break;
//czerwone i zielone dla pieszych
case 1:
		PORTA |= (1<<LED2);
 22c:	d9 9a       	sbi	0x1b, 1	; 27
		PORTA &= ~ (1<<LED1);
 22e:	d8 98       	cbi	0x1b, 0	; 27
		PORTA &= ~ (1<<LED4);
 230:	db 98       	cbi	0x1b, 3	; 27
		TCNT1 = 0;
 232:	1d bc       	out	0x2d, r1	; 45
 234:	1c bc       	out	0x2c, r1	; 44
 236:	27 c0       	rjmp	.+78     	; 0x286 <__vector_9+0x9c>
		flaga++;
		break;
//miganie zielonego dla pieszych
case 2:
		PORTA ^= (1<<LED4);
 238:	8b b3       	in	r24, 0x1b	; 27
 23a:	98 e0       	ldi	r25, 0x08	; 8
 23c:	89 27       	eor	r24, r25
 23e:	8b bb       	out	0x1b, r24	; 27
		TCNT1 = 57723;
 240:	2b e7       	ldi	r18, 0x7B	; 123
 242:	31 ee       	ldi	r19, 0xE1	; 225
 244:	3d bd       	out	0x2d, r19	; 45
 246:	2c bd       	out	0x2c, r18	; 44
		licznik++;
 248:	80 91 6a 00 	lds	r24, 0x006A
 24c:	90 91 6b 00 	lds	r25, 0x006B
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	90 93 6b 00 	sts	0x006B, r25
 256:	80 93 6a 00 	sts	0x006A, r24
		if(licznik == 5)
 25a:	05 97       	sbiw	r24, 0x05	; 5
 25c:	61 f4       	brne	.+24     	; 0x276 <__vector_9+0x8c>
			{
				flaga = 3;
 25e:	83 e0       	ldi	r24, 0x03	; 3
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	90 93 61 00 	sts	0x0061, r25
 266:	80 93 60 00 	sts	0x0060, r24
				licznik = 0;
 26a:	10 92 6b 00 	sts	0x006B, r1
 26e:	10 92 6a 00 	sts	0x006A, r1
				TCNT1 = 57723;
 272:	3d bd       	out	0x2d, r19	; 45
 274:	2c bd       	out	0x2c, r18	; 44
			}
//pomaranczowe dla aut
case 3:
		PORTA |=(1<<LED1)|(1<<LED4);
 276:	8b b3       	in	r24, 0x1b	; 27
 278:	89 60       	ori	r24, 0x09	; 9
 27a:	8b bb       	out	0x1b, r24	; 27
		PORTA &= ~ (1<<LED2);
 27c:	d9 98       	cbi	0x1b, 1	; 27
		TCNT1 = 49911;
 27e:	87 ef       	ldi	r24, 0xF7	; 247
 280:	92 ec       	ldi	r25, 0xC2	; 194
 282:	9d bd       	out	0x2d, r25	; 45
 284:	8c bd       	out	0x2c, r24	; 44
		flaga++;
 286:	80 91 60 00 	lds	r24, 0x0060
 28a:	90 91 61 00 	lds	r25, 0x0061
 28e:	01 96       	adiw	r24, 0x01	; 1
 290:	90 93 61 00 	sts	0x0061, r25
 294:	80 93 60 00 	sts	0x0060, r24
 298:	10 c0       	rjmp	.+32     	; 0x2ba <__vector_9+0xd0>
		break;
//zielone dla aut
default:
		PORTA |=(1<<LED2);
 29a:	d9 9a       	sbi	0x1b, 1	; 27
		PORTA &= ~ (1<<LED3);
 29c:	da 98       	cbi	0x1b, 2	; 27
		TCNT1 = 0;
 29e:	1d bc       	out	0x2d, r1	; 45
 2a0:	1c bc       	out	0x2c, r1	; 44
		flaga = 4;
 2a2:	84 e0       	ldi	r24, 0x04	; 4
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	90 93 61 00 	sts	0x0061, r25
 2aa:	80 93 60 00 	sts	0x0060, r24
		skonczony = 1;
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	90 93 65 00 	sts	0x0065, r25
 2b6:	80 93 64 00 	sts	0x0064, r24
		break;
}
	 
} 	
 2ba:	9f 91       	pop	r25
 2bc:	8f 91       	pop	r24
 2be:	3f 91       	pop	r19
 2c0:	2f 91       	pop	r18
 2c2:	0f 90       	pop	r0
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	0f 90       	pop	r0
 2c8:	1f 90       	pop	r1
 2ca:	18 95       	reti

000002cc <_exit>:
 2cc:	f8 94       	cli

000002ce <__stop_program>:
 2ce:	ff cf       	rjmp	.-2      	; 0x2ce <__stop_program>
